Name: nroff - text processor and formatter

(This is from Chapter 9, the Extended Manual Pages, of the Minix 1.5
Reference Manual, very lightly edited and reformatted.  The information
contained here may not be completely accurate when applied to the
corresponding parts of Minix 1.7 or later versions.)

10.13.  NROFF - A TEXT PROCESSOR

   Nroff is a text processor and formatter based on the design provided
in Software Tools by Kernighan and Plauger.  It has been modified to
resemble the UNIX nroff command.  The text and commands found in the
file(s) are processed to generate formatted text.  Note that one (and
only one) of the files can be "-" which reads input from stdin at that
point.  The output always goes to stdout which can be redirected by the
shell.  The o option lets you redirect error output to the specified
file rather than stderr.
   The following command line options are available:
  mname     Process  macro  file  tmac.name.
  ofile     Set error log file (default is stderr).
  pon       Shift output right n spaces (like .po).
  pnn       Initial page number (like .pn).
  v         Prints the version information to stdout.
  +n        Causes output to start with page n.
  n         Causes output to stop after page n.
            Input from stdin.
   Nroff recognizes the following environment variables from the shell.
TMACDIR is alternate directory to find the files tmac.* (``.'' for
example).  The default is /usr/lib/tmac.  TMPDIR is an alternate
directory to place any temporary files.  The default is the current
directory.

10.13.1.  Commands

   Commands typically are distinguished by a period in column one of
the input followed by a two character abbreviation for the command
function.  The abbreviation may then be followed by an optional
numeric or character argument.  The numeric argument may be an absolute
value such as setting the right margin to a particular column, or the
argument may be preceded by a plus sign or a minus sign to indicate
that the parameter should be modified relative to a previous setting.
The following commands are recognized (those marked ``extension'' are
requests that may be added some day in the distant future).

.ad
  Begin line adjustment.  If fill mode is not on, adjustment is
deferred until it is back on.  If a type indicator is present, the
adjustment type is changed as follows:
    Indicator      Type
    l              adjust left margin only
    r              adjust right margin only
    c              center
    b or n         adjust both margins (default)
    absent         unchanged
.af
 Assign format to number register. The available formats are:
   Format         Numbering Sequence
   1              0,1,2,3,4,...
   001            000,001,002,...
   i              0,i,ii,iii,iv,v,...
   I              0,I,II,III,IV,V,...
   a              0,a,b,...,z,aa,ab,...zz,aaa,...
   A              0,A,B,...,Z,AA,AB,...ZZ,AAA,...
The second format above indicates that the field width, i.e.  number of
digits, is specified by the number of digits in the format type.

.bd
Ignored by nroff.

.bo (extension)
Causes the following lines of text to appear in boldface.  The optional
argument specifies the number of lines to be typed in boldface.
Boldface and underlining are mutually exclusive features.  The
appearance of a boldface command will cause any underlining to cease.

.bp (extension)
Causes succeeding text to appear at the top of a new page.  The
optional argument specifies the page number for the new page.  The
initial value is one and the default value is one more than the
previous page number.

.br
Causes succeeding text to start on a new line at the current left
margin.  There is no numeric argument for this command.

.bs (extension)
Enables or disables the appearance of backspaces in the output text.
Underlining and boldface options are implemented by inserting
character-backspace-character combinations into the output buffer.
This is fine for devices which properly recognize the backspace
character.  Some printers, however, do not recognize backspaces, so the
option is provided to overprint one line buffer with another.  The
first line buffer is terminated with just a carriage return rather than
the carriage return-linefeed combination.  A zero argument or no
argument to the backspace command removes backspaces from the output.
A non-zero argument leaves them in the output.  The default is to
remove backspaces.

.cc
Changes the nroff command character to that specified by the character
argument.  If no argument is provided, the default is a period (.).

.ce
Causes the next line of text to appear centered on the output.  The
optional argument specifies if more than one line is to be centered.

.cs
Ignored by nroff.

.cu
Causes the next line(s) of text to be continuously underlined.  Unlike
the underline command (see .ul) which underlines only alphanumerics,
continuous underlining underlines all printable characters.  The
optional argument specifies the number of lines of text to
underlined.  Any normal underlining or boldface commands currently in
effect will be terminated.

.c2
Changes the nroff no break character to that specified by the character
argument.  If no argument is provided, the default is a single quote.

.de
Causes all text and commands following to be used to define a macro.
The definition is terminated by a .en command or the default ..
terminator.  The first two characters of the argument following the .de
command become the name of the new command.  It should be noted that
upper and lower case arguments are considered different.  Thus, the
commands .PP and .pp could define two different macros.  Care should be
exercised since existing commands may be redefined.

A macro may contain up to ten arguments.  In the macro definition, the
placement of arguments is designated by the two character sequences,
$1, $2, ...  $9.  When the macro is invoked, each argument of the macro
command line is substituted for its corresponding designator in the
expansion.  The first argument of the macro command is substituted for
the $1 in the expansion, the second argument for the $2, and so forth.
Arguments are typically strings which do not contain blanks or tabs.
If an argument is to contain blanks, then it should be surrounded by
either single or double quotes.

.ds
Define a string.  To initiate the string with a blank or include blanks
in the string, start it with a single or double quote.  The string can
contain other defined strings or number registers as well as normal
text.  Strings are stored on the macro name space.

.ec
Changes the nroff escape character to that specified by the character
argument.  If no argument is provided, the default is a backslash.

.ef (extension)
Specifies the text for the footer on even numbered pages.  The format
is the same as for the footer command (see .fo).

.eh (extension)
Specifies the text for the header on even numbered pages.  The format
is the same as for the footer command (see .fo).

.en (extension)
Designates the end of a macro definition.

.eo
Turn the escape mechanism off.

.fi
Causes the input text to be rearranged or filled to obtain the maximum
word count possible between the previously set left and right margins.
No argument is expected.

.fl
Causes the output buffer to be flushed immediately.

.fo (extension)
Specifies text to be used for a footer.  The footer text contains three
strings separated by a delimiter character.  The first non-blank
character following the command is designated as the delimiter.  The
first text string is left justified to the current indentation value
(specified by .in).  The second string is centered between the current
indentation value and the current right margin value (specified by
.rm).  The third string is right justified to the current right margin
value.  The absence of footer text will result in the footer being
printed as one blank line.  The presence of the page number character
(set by .pc) in the footer text results in the current page number
being inserted at that position.  Multiple occurrences of the page
number character are allowed.

.ft
Changes the current font.  The choices are R (Times Roman), I (Times
Italic), B (Times Bold), S (math special), and P used to request the
previous font.  P resets the next previous font to be the one just
changed, amounting to a swap.

.he (extension)
Specifies text to be used for a header.  The format is the same as for
the footer (see .fo).

.in
Indents the left margin to the column value specified by the argument.
The default left margin is set to zero.

.ju (extension)
Causes blanks to be inserted between words in a line of output in order
to align or justify the right margin.  The default is to justify.

.ll
Sets the current line length. The default is eighty.

.ls
Sets the line spacing to the value specified by the argument.  The
default is for single spacing.

.lt
Set length of three-part titles.  Line length and title length are
independent.  Indents do not apply to titles but page offsets do.

.m1 (extension)
Specifies the number of lines in the header margin.  This is the space
from the physical top of page to and including the header text.  A
value of zero causes the header to not be printed.  A value of one
causes the header to appear at the physical top of page.  Larger
argument values cause the appropriate number of blank lines to appear
before the header is printed.

.m2 (extension)
Specifies the number of blank lines to be printed between the header
line and the first line of the processed text.

.m3 (extension)
Specifies the number of blank lines to be printed between the last line
of processed text and the footer line.

.m4 (extension)
Specifies the number of lines in the footer margin.  This command
affects the footer the same way the .m1 command affects the header.

.na
Noadjust.  Adjustment is turned off; the right margin is ragged.  The
adjustment type for .ad is not changed.  Output line filling still
occurs if fill mode is on.

.ne
Specifies a number of lines which should not be broken across a page
boundary.  If the number of lines remaining on a page is less than the
value needed, then a new output page is started.

.nf
Specifies that succeeding text should be printed without rearrangement,
or with no fill.  No argument is expected.

.nj (extension)
Specifies that no attempt should be made to align or justify the right
margin.  No argument is expected.

.nr
Causes the value of a number register to be set or modified.  A total
of twenty-six number registers are available designated \na through \nz
(either upper or lower case is allowed).  When the sequence \nc is
imbedded in the text, the current value of number register c replaces
the sequence, thus, such things as paragraph numbering can be
accomplished with relative ease.

.of (extension)
Specifies the text for the footer on odd numbered pages.  The format is
the same as the footer command (see .fo).

.oh (extension)
Specifies the text for the header on odd numbered pages.  The format is
the same as the footer command (see .fo).

.pc
Specifies the page number character to be used in headers and footers.
The occurrence of this character in the header or footer text results
in the current page number being printed.  The default for this
character is the percent sign (%).

.pl
Specifies the page length or the number of lines per output page.  The
default is sixty-six.

.pm
Print macros.  The names and sizes of the macros are printed to stdout.
This is useful when building a macro package to see how much of the
total namespace is consumed by the package.

.pn
Changes the page number of the current page and all subsequent pages to
its argument.  If no argument is given, the command is ignored.

.po
Specifies a page offset value.  This allows the formatted text to be
shifted to the right by the number of spaces specified.  This feature
may also be invoked by a switch on the command line.

.ps
Ignored by nroff.

.rr
Removes a number register.

.so
Causes input to be retrieved from the file specified by the command's
character string argument.  The contents of the new file are inserted
into the output stream until an EOF is detected.  Processing of the
original file is then resumed.  Command nesting is allowed.

.sp
Specifies a number of blank lines to be output before printing the next
line of text.

.ti
Temporarily alters the indentation or left margin value for a single
succeeding input line.

.tl
Specifies text to be used for a page title.  The format is the same as
for the header (see .he).

.ul
Causes the next line(s) of text to be underlined.  Unlike the .cu
command, this command causes only alphanumerics to be underlined,
skipping punctuation and white space.  Underline and boldface are
mutually exclusive.

  The following nroff commands, normally available, are currently not
implemented in this version:

.fp, .mk, .rt, .vs, .sv, .os, .ns, .rs, .am, .as, .rm, .rn, .di, .da,
.wh, .ch, .dt, .it, .em, .ta, .tc, .lc, .fc, .lg, .uf, .tr, .nh, .hy,
.hc, .hw, .nm, .nn, .if, .ie, .el, .ev, .rd, .ex, .nx, .pi, .mc, .tm,
and .ig.

10.13.2.  Escape Sequences

   Escape sequences are used to access special characters (such as
Greek letters) which may be outside the normal printable ASCII
character set.  The are also used to toggle certain actions such as
font selection.  The escape sequences include:
  \      backslash character
  \e     printable version of escape character
  \'     acute accent (equivalent to \(aa)
  \`     grave accent (equivalent to \(ga)
  \-     minus sign
  \.     period
  \<sp>  a single, unpaddable space
  \0     digit-width space
  \&     non-printing zero-width character
  \"     beginning of comment
  \%     default hyphenation character
  \(xx   special character named xx
  \*x    insert string named x
  \*(xx  insert string named xx
  \fc    font change (c = R,I,B,S,P)
  \nx    interpolate number register x
  \t     horizontal tab

10.13.3.  Predefined General Number Registers

   The following number registers are available for both reading and
writing.  They are accessed with the \n(xx and \nx escape and can be
set with .nr:
  %    current page number
  dw   current day of the week (1-7)
  dy   current day of the month (1-31)
  hh   current hours (0-23)
  ln   current line number
  mm   current minutes (0-59)
  mo   current month (1-12)
  ss   current seconds (0-59)
  yr   last 2 digits of current year

The following number registers are available for reading only:
  .$   number of args available in current macro
  .A   always 1 in nroff
  .H   available horizontal resolution
  .T   always 0 in nroff
  .V   available vertical resolution
  .c   number of lines read from current file
  .f   current font (1-4)
  .i   current indent
  .l   current line length
  .o   current page offset
  .p   current page length
  .v   current vertical spacing

10.13.4.  Notes

   There are several missing features, notably diversions, traps, and
conditionals.  This means you cannot use some existing macro
packages.  There are no ms and me packages as a result.  The goal is to
(eventually) make nroff work with all the SunOS macro packages.

10.13.5.  Authors

   This version of nroff was originally written in BDS C by Stephen L.
Browning.  It was adapted for standard C by W.  N.  Paul.  Bill
Rosenkranz modified it heavily and ported it to MINIX.


