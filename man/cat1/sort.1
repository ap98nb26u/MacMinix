Command:        sort - sort a file of ASCII lines
Syntax:         sort [-bcdfimnru] [-tx] [-o name] [+pos1] [-pos2] file ...
Flags:          -       use stdin as input
                -b      skip leading blanks when making comparisons
                -c      check to see if a file is sorted
                -d      dictionary order, ignoring punctuation bar '.' and ','
                -f      fold upper case to lower case
                -i      ignore characters outside ASCII range (040-0176)
                -m      merge presorted files
                -n      numeric sort order, optional decimal point
                -o fn   next argument is output file
                -r      reverse the sense of comparisons
                -tx     character x is field separator
                -u      unique mode, deleting duplicate lines
                +#.#    (field.offset) start comparing at field #., offset .#
                -#.#    (field.offset) stop comparing at field #., offset .#
                        (a missing offset is taken to be 0)
                        (a missing field.offset means the rest of the line)
Examples:       sort -nr file           # Sort keys numerically, reversed
                sort +2 -4 file         # Sort using fields 2 and 3 as key
                sort +2 -t: -o out      # Field separator is :
                sort +.3 -.6            # Characters 3 through 5 form the key

     Sort sorts one or more files.  If no files are specified, standard input 
is sorted.  Output is written on standard output, unless -o is specified.  The 
options +pos1 -pos2 use only fields pos1 up to but not including pos2 as the 
sort key, where a field is a string of characters delimited by spaces and 
tabs, unless a different field delimiter is specified with -t.  Both pos1 and 
pos2 have the form m.n where m tells the number of fields and n tells the 
number of characters.  Either m or n may be omitted.

